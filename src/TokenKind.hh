<?hh //strict

enum TokenKind : int
{
  EOF = 0;

  // Operators and Punctuators
  OPEN_SQUARE = 1;
  CLOSE_SQUARE = 2;
  OPEN_PAREN = 3;
  CLOSE_PAREN = 4;
  OPEN_CURLY = 5;
  CLOSE_CURLY = 6;
  PERIOD = 7;
  ARROW = 8;
  PLUS_PLUS = 9;
  MINUS_MINUS = 10;
  STAR_STAR = 11;
  STAR = 12;
  PLUS = 13;
  MINUS = 14;
  TILDE = 15;
  BANG = 16;
  DOLLAR = 17;
  FORWARD_SLASH = 18;
  PERCENT = 19;
  LEFT_SHIFT = 20;
  RIGHT_SHIFT = 21;
  OPEN_ANGLE = 22;
  CLOSE_ANGLE = 23;
  LESS_EQUAL = 24;
  GREATER_EQUAL = 25;
  EQUAL_EQUAL = 26;
  EQUAL_EQUAL_EQUAL = 27;
  BANG_EQUAL = 28;
  BANG_EQUAL_EQUAL = 29;
  HAT = 30;
  BAR = 31;
  AMPERSAND = 32;
  AMPERSAND_AMPERSAND = 33;
  BAR_BAR = 34;
  QUESTION = 35;
  COLON = 36;
  SEMI_COLON = 37;
  EQUAL = 38;
  STAR_STAR_EQUAL = 39;
  STAR_EQUAL = 40;
  SLASH_EQUAL = 41;
  PERCENT_EQUAL = 42;
  PLUS_EQUAL = 43;
  MINUS_EQUAL = 44;
  PERIOD_EQUAL = 45;
  LEFT_SHIFT_EQUAL = 46;
  RIGHT_SHIFT_EQUAL = 47;
  AMPERSAND_EQUAL = 48;
  HAT_EQUAL = 49;
  BAR_EQUAL = 50;
  COMMA = 51;

  NAME = 52;
  VARIABLE_NAME = 53;
  NUMBER = 54;
  STRING = 55;

  // Keywords
  ABSTRACT = 100;
  ARRAYKEY = 101;
  AS = 102;
  ASYNC = 103;
  BREAK = 104;
  CASE = 105;
  CATCH = 106;
  CLASS = 107;
  CLONE = 108;
  CONST = 109;
  CONTINUE = 110;
  DEFAULT = 111;
  DO = 112;
  ECHO = 113;
  ELSE = 114;
  ELSEIF = 115;
  ENUM = 116;
  EXTENDS = 117;
  FINAL = 118;
  FINALLY = 119;
  FOR = 120;
  FOREACH = 121;
  FUNCTION = 122;
  IF = 123;
  IMPLEMENTS = 124;
  INSTANCEOF = 125;
  INSTEADOF = 126;
  INTERFACE = 127;
  MIXED = 128;
  NAMESPACE = 129;
  NEW = 130;
  NEWTYPE = 131;
  NUM = 132;
  PRIVATE = 133;
  PROTECTED = 134;
  PUBLIC = 135;
  REQUIRE = 136;
  REQUIRE_ONCE = 137;
  RETURN = 138;
  SHAPE = 139;
  STATIC = 140;
  SWITCH = 141;
  THROW = 142;
  TRAIT = 143;
  TRY = 144;
  TUPLE = 145;
  TYPE = 146;
  USE = 147;
  WHILE = 148;
  YIELD = 149;
 
  FALSE = 150;
  NULL = 151;
  TRUE = 152;
}
