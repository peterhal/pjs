Utils/Char.hh
(function(__export) {
  var Utils = Utils || {};
  (function(__export) {
  var Char = function() {};
  Char.EOF = -1;
  Char.HORIZONTAL_TAB = 0x09;
  Char.LINE_FEED = 0x0A;
  Char.CARRIAGE_RETURN = 0x0D;
  Char.SPACE = 0x20;
  Char.BANG = 0x21;
  Char.DOUBLE_QUOTE = 0x22;
  Char.HASH = 0x23;
  Char.DOLLAR = 0x24;
  Char.PERCENT = 0x25;
  Char.AMPERSAND = 0x26;
  Char.SINGLE_QUOTE = 0x27;
  Char.OPEN_PAREN = 0x28;
  Char.CLOSE_PAREN = 0x29;
  Char.STAR = 0x2A;
  Char.PLUS = 0x2B;
  Char.COMMA = 0x2C;
  Char.MINUS = 0x2D;
  Char.PERIOD = 0x2E;
  Char.FORWARD_SLASH = 0x2F;
  Char.ZERO = 0x30;
  Char.ONE = 0x31;
  Char.SEVEN = 0x37;
  Char.NINE = 0x39;
  Char.COLON = 0x3A;
  Char.SEMI_COLON = 0x3B;
  Char.OPEN_ANGLE = 0x3C;
  Char.EQUAL = 0x3D;
  Char.CLOSE_ANGLE = 0x3E;
  Char.QUESTION = 0x3F;
  Char.AT = 0x40;
  Char.A = 0x41;
  Char.B = 0x42;
  Char.E = 0x45;
  Char.F = 0x46;
  Char.X = 0x58;
  Char.Z = 0x5A;
  Char.OPEN_SQUARE = 0x5B;
  Char.BACK_SLASH = 0x5C;
  Char.CLOSE_SQUARE = 0x5D;
  Char.HAT = 0x5E;
  Char.UNDERSCORE = 0x5F;
  Char.a = 0x61;
  Char.b = 0x62;
  Char.e = 0x65;
  Char.f = 0x66;
  Char.x = 0x78;
  Char.z = 0x7A;
  Char.OPEN_CURLY = 0x7B;
  Char.BAR = 0x7C;
  Char.CLOSE_CURLY = 0x7D;
  Char.TILDE = 0x7E;
  Char.isNewLine = function ($ch)
  {
    return $ch === Char.CARRIAGE_RETURN || $ch === Char.LINE_FEED;
  }

  Char.isWhitespace = function ($ch)
  {
    switch ($ch){
    case Char.CARRIAGE_RETURN:
    case Char.LINE_FEED:
    case Char.SPACE:
    case Char.HORIZONTAL_TAB:
      return true;
    default:
      return false;
    }
  }

  Char.isHexDigit = function ($ch)
  {
    return Char.isDigit($ch) || ($ch >= Char.A && $ch <= Char.F) || ($ch >= Char.a && $ch <= Char.f);
  }

  Char.hexDigitValue = function ($ch)
  {
    return (Char.isDigit($ch) ? Char.digitValue($ch) : ($ch <= Char.F ? $ch - Char.F + 10 : $ch - Char.f + 10));
  }

  Char.digitValue = function ($ch)
  {
    return $ch - Char.ZERO;
  }

  Char.isDigit = function ($ch)
  {
    return $ch >= Char.ZERO && $ch <= Char.NINE;
  }

  Char.isOctalDigit = function ($ch)
  {
    return $ch >= Char.ZERO && $ch <= Char.SEVEN;
  }

  Char.isBinaryDigit = function ($ch)
  {
    return $ch === Char.ZERO || $ch === Char.ONE;
  }

  Char.isNonDigit = function ($ch)
  {
    return $ch === Char.UNDERSCORE || Char.isUpperCaseLetter($ch) || Char.isLowerCaseLetter($ch);
  }

  Char.isLowerCaseLetter = function ($ch)
  {
    return $ch >= Char.a && $ch <= Char.z;
  }

  Char.isUpperCaseLetter = function ($ch)
  {
    return $ch >= Char.A && $ch <= Char.Z;
  }

  Char.isNameNonDigit = function ($ch)
  {
    return Char.isNonDigit($ch) || ($ch >= 0x7F && $ch <= 0xFF);
  }

  Char.isName = function ($ch)
  {
    return Char.isNameNonDigit($ch) || Char.isDigit($ch);
  }

  __export.Char = Char;
  }(Utils));
}(this));
Utils/ConsoleErrorReporter.hh
(function(__export) {
  var Utils = Utils || {};
  (function(__export) {
  var ConsoleErrorReporter = function() {};
  ConsoleErrorReporter.prototype.error = function ($message)
  {
    fwrite(STDERR, $message + "\n");
  }

  __export.ConsoleErrorReporter = ConsoleErrorReporter;
  }(Utils));
}(this));
Utils/ErrorReporter.hh
(function(__export) {
  var Utils = Utils || {};
  (function(__export) {
  }(Utils));
}(this));
Utils/IndentedWriter.hh
(function(__export) {
  var Utils = Utils || {};
  (function(__export) {
  var Exception = Exception;
  var IndentedWriter = function($file)
  {
    $this.$file = $file;
    $this.atBeginingOfLine = true;
    $this.indent = 0;
  }

  IndentedWriter.prototype.write = function ($value)
  {
    if ($this.atBeginingOfLine)
      {
        fwrite($this.file, str_repeat(' ', $this.indent));
      }
    fwrite($this.file, $value);
    $this.atBeginingOfLine = false;
  }

  IndentedWriter.prototype.writeLine = function ()
  {
    fwrite($this.file, "\n");
    $this.atBeginingOfLine = true;
  }

  IndentedWriter.prototype.indent = function ()
  {
    $this.indent += 
Fatal error: Uncaught exception 'Exception' with message 'self within a class' in /home/peter/projects/pjs/src/Convert/ClassConverter.hh:76
Stack trace:
#0 /home/peter/projects/pjs/src/Convert/ExpressionConverter.hh(217): Convert\ClassConverter->convertSelf()
#1 /home/peter/projects/pjs/src/Convert/ExpressionConverter.hh(68): Convert\ExpressionConverter->convertScopeResolution()
#2 /home/peter/projects/pjs/src/Convert/ExpressionConverter.hh(267): Convert\ExpressionConverter->convertExpression()
#3 /home/peter/projects/pjs/src/Convert/ExpressionConverter.hh(50): Convert\ExpressionConverter->convertBinaryExpression()
#4 /home/peter/projects/pjs/src/Convert/StatementConverter.hh(161): Convert\ExpressionConverter->convertExpression()
#5 /home/peter/projects/pjs/src/Convert/StatementConverter.hh(65): Convert\StatementConverter->convertExpressionStatement()
#6 /home/peter/projects/pjs/src/Convert/StatementConverter.hh(54): Convert\StatementConverter->convertStatement()
#7 /home/peter/projects/pjs/src/Convert/StatementConverter.hh(44): Convert\StatementConverter->convertStatementList()
#8 /home/peter/projects/pjs/src/Convert/ClassConverter.hh(150): Convert\StatementConverter->convertCompoundStatement()
#9 /home/peter/projects/pjs/src/Convert/ClassConverter.hh(123): Convert\ClassConverter->convertMethodDefinition()
#10 /home/peter/projects/pjs/src/Convert/ClassConverter.hh(66): Convert\ClassConverter->convertClassMember()
#11 /home/peter/projects/pjs/src/Convert/ScriptConverter.hh(88): Convert\ClassConverter->convertClassDeclaration()
#12 /home/peter/projects/pjs/src/Convert/ScriptConverter.hh(69): Convert\ScriptConverter->convertClassDeclaration()
#13 /home/peter/projects/pjs/src/Convert/ScriptConverter.hh(49): Convert\ScriptConverter->convertDeclarations()
#14 /home/peter/projects/pjs/src/Convert/ScriptConverter.hh(100): Convert\ScriptConverter->convertDeclarationsOpt()
#15 /home/peter/projects/pjs/src/Convert/ScriptConverter.hh(66): Convert\ScriptConverter->convertNamespaceDefinition()
#16 /home/peter/projects/pjs/src/Convert/ScriptConverter.hh(40): Convert\ScriptConverter->convertDeclarations()
#17 /home/peter/projects/pjs/src/convertMain.hh(30): Convert\ScriptConverter->convertScript()
#18 /home/peter/projects/pjs/src/convertProgram.php(5): convertMain()
#19 {main}
